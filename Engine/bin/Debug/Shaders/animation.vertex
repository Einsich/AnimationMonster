#version 440
layout(location = 0)in vec3 Position ;
layout(location = 1)in vec3 Normal  ;
layout(location = 2)in vec2 TexCoord  ;
layout(location = 3)in vec4 BoneWeights  ;
layout(location = 4)in vec4 BoneIndex  ;

uniform mat4 ViewProjection;
uniform mat4 Model;
uniform vec3 DiffuseMaterial;
uniform mat4 Bones[100];

out vec3 EyespaceNormal;
out vec3 Diffuse;
out vec2 UV;
out vec3 WorldPosition;
void main()
{
	mat4 BoneTransform;
	for (int i = 0; i < 4; i++)
		BoneTransform += BoneWeights[i]* Bones[int(BoneIndex[i])];
    EyespaceNormal = mat3(Model) * mat3(BoneTransform) * Normal;
    vec4 pos = Model * BoneTransform * vec4(Position, 1);
    gl_Position = ViewProjection * pos;
    WorldPosition = pos.xyz;
    Diffuse = DiffuseMaterial;
    UV = TexCoord;
}