in vec2 UV;
in vec3 EyespaceNormal;
in vec3 Diffuse;
in vec3 WorldPosition;
out vec4 FragColor;

uniform vec3 LightPosition;
uniform vec3 AmbientMaterial;
uniform vec3 SpecularMaterial;
uniform float Shininess;
uniform float Reflectance;
uniform vec3 CameraPosition;

uniform sampler2D mainTex;
uniform samplerCube skybox;
void main()
{
    vec3 N = normalize(EyespaceNormal);
    vec3 L = normalize(LightPosition);
    vec3 E = vec3(0, 0, 1);
    vec3 H = normalize(L + E);
    
    float df = max(0.0, dot(N, L));
    float sf = max(0.0, dot(N, H));
    sf = pow(sf, Shininess);
    vec3 color = AmbientMaterial + df * Diffuse + sf * SpecularMaterial;
    vec3 Reflect = reflect(-CameraPosition + WorldPosition, N);
    vec3 sky = texture(skybox, normalize(Reflect)).rgb;
    color += sky;
    if (Diffuse.x < 0)
    	color += texture(mainTex, UV).rgb ;
    FragColor = vec4(color, 1.0);
}